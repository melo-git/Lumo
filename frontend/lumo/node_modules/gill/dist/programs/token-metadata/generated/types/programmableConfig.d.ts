/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { type Address, type Codec, type Decoder, type Encoder, type GetDiscriminatedUnionVariant, type GetDiscriminatedUnionVariantContent, type Option, type OptionOrNullable } from '@solana/kit';
export type ProgrammableConfig = {
    __kind: 'V1';
    ruleSet: Option<Address>;
};
export type ProgrammableConfigArgs = {
    __kind: 'V1';
    ruleSet: OptionOrNullable<Address>;
};
export declare function getProgrammableConfigEncoder(): Encoder<ProgrammableConfigArgs>;
export declare function getProgrammableConfigDecoder(): Decoder<ProgrammableConfig>;
export declare function getProgrammableConfigCodec(): Codec<ProgrammableConfigArgs, ProgrammableConfig>;
export declare function programmableConfig(kind: 'V1', data: GetDiscriminatedUnionVariantContent<ProgrammableConfigArgs, '__kind', 'V1'>): GetDiscriminatedUnionVariant<ProgrammableConfigArgs, '__kind', 'V1'>;
export declare function isProgrammableConfig<K extends ProgrammableConfig['__kind']>(kind: K, value: ProgrammableConfig): value is ProgrammableConfig & {
    __kind: K;
};
//# sourceMappingURL=programmableConfig.d.ts.map