/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { type Codec, type Decoder, type Encoder, type GetDiscriminatedUnionVariant, type GetDiscriminatedUnionVariantContent } from '@solana/kit';
import { type Collection, type CollectionArgs } from '.';
export type CollectionToggle = {
    __kind: 'None';
} | {
    __kind: 'Clear';
} | {
    __kind: 'Set';
    fields: readonly [Collection];
};
export type CollectionToggleArgs = {
    __kind: 'None';
} | {
    __kind: 'Clear';
} | {
    __kind: 'Set';
    fields: readonly [CollectionArgs];
};
export declare function getCollectionToggleEncoder(): Encoder<CollectionToggleArgs>;
export declare function getCollectionToggleDecoder(): Decoder<CollectionToggle>;
export declare function getCollectionToggleCodec(): Codec<CollectionToggleArgs, CollectionToggle>;
export declare function collectionToggle(kind: 'None'): GetDiscriminatedUnionVariant<CollectionToggleArgs, '__kind', 'None'>;
export declare function collectionToggle(kind: 'Clear'): GetDiscriminatedUnionVariant<CollectionToggleArgs, '__kind', 'Clear'>;
export declare function collectionToggle(kind: 'Set', data: GetDiscriminatedUnionVariantContent<CollectionToggleArgs, '__kind', 'Set'>['fields']): GetDiscriminatedUnionVariant<CollectionToggleArgs, '__kind', 'Set'>;
export declare function isCollectionToggle<K extends CollectionToggle['__kind']>(kind: K, value: CollectionToggle): value is CollectionToggle & {
    __kind: K;
};
//# sourceMappingURL=collectionToggle.d.ts.map