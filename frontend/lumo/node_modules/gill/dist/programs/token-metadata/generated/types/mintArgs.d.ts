/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { type Codec, type Decoder, type Encoder, type GetDiscriminatedUnionVariant, type GetDiscriminatedUnionVariantContent, type Option, type OptionOrNullable } from "@solana/kit";
import { type AuthorizationData, type AuthorizationDataArgs } from ".";
export type MetadataMintArgs = {
    __kind: "V1";
    amount: bigint;
    authorizationData: Option<AuthorizationData>;
};
export type MintArgsArgs = {
    __kind: "V1";
    amount: number | bigint;
    authorizationData: OptionOrNullable<AuthorizationDataArgs>;
};
export declare function getMintArgsEncoder(): Encoder<MintArgsArgs>;
export declare function getMintArgsDecoder(): Decoder<MetadataMintArgs>;
export declare function getMintArgsCodec(): Codec<MintArgsArgs, MetadataMintArgs>;
export declare function mintArgs(kind: "V1", data: GetDiscriminatedUnionVariantContent<MintArgsArgs, "__kind", "V1">): GetDiscriminatedUnionVariant<MintArgsArgs, "__kind", "V1">;
export declare function isMintArgs<K extends MetadataMintArgs["__kind"]>(kind: K, value: MetadataMintArgs): value is MetadataMintArgs & {
    __kind: K;
};
//# sourceMappingURL=mintArgs.d.ts.map