/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { type Address, type Codec, type Decoder, type Encoder, type Option, type OptionOrNullable } from '@solana/kit';
import { type Collection, type CollectionArgs, type CollectionDetails, type CollectionDetailsArgs, type Creator, type CreatorArgs, type TokenStandard, type TokenStandardArgs, type Uses, type UsesArgs } from '.';
export type AssetData = {
    name: string;
    symbol: string;
    uri: string;
    sellerFeeBasisPoints: number;
    creators: Option<Array<Creator>>;
    primarySaleHappened: boolean;
    isMutable: boolean;
    tokenStandard: TokenStandard;
    collection: Option<Collection>;
    uses: Option<Uses>;
    collectionDetails: Option<CollectionDetails>;
    ruleSet: Option<Address>;
};
export type AssetDataArgs = {
    name: string;
    symbol: string;
    uri: string;
    sellerFeeBasisPoints: number;
    creators: OptionOrNullable<Array<CreatorArgs>>;
    primarySaleHappened: boolean;
    isMutable: boolean;
    tokenStandard: TokenStandardArgs;
    collection: OptionOrNullable<CollectionArgs>;
    uses: OptionOrNullable<UsesArgs>;
    collectionDetails: OptionOrNullable<CollectionDetailsArgs>;
    ruleSet: OptionOrNullable<Address>;
};
export declare function getAssetDataEncoder(): Encoder<AssetDataArgs>;
export declare function getAssetDataDecoder(): Decoder<AssetData>;
export declare function getAssetDataCodec(): Codec<AssetDataArgs, AssetData>;
//# sourceMappingURL=assetData.d.ts.map