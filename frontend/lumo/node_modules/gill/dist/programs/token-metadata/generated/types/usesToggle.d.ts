/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { type Codec, type Decoder, type Encoder, type GetDiscriminatedUnionVariant, type GetDiscriminatedUnionVariantContent } from '@solana/kit';
import { type Uses, type UsesArgs } from '.';
export type UsesToggle = {
    __kind: 'None';
} | {
    __kind: 'Clear';
} | {
    __kind: 'Set';
    fields: readonly [Uses];
};
export type UsesToggleArgs = {
    __kind: 'None';
} | {
    __kind: 'Clear';
} | {
    __kind: 'Set';
    fields: readonly [UsesArgs];
};
export declare function getUsesToggleEncoder(): Encoder<UsesToggleArgs>;
export declare function getUsesToggleDecoder(): Decoder<UsesToggle>;
export declare function getUsesToggleCodec(): Codec<UsesToggleArgs, UsesToggle>;
export declare function usesToggle(kind: 'None'): GetDiscriminatedUnionVariant<UsesToggleArgs, '__kind', 'None'>;
export declare function usesToggle(kind: 'Clear'): GetDiscriminatedUnionVariant<UsesToggleArgs, '__kind', 'Clear'>;
export declare function usesToggle(kind: 'Set', data: GetDiscriminatedUnionVariantContent<UsesToggleArgs, '__kind', 'Set'>['fields']): GetDiscriminatedUnionVariant<UsesToggleArgs, '__kind', 'Set'>;
export declare function isUsesToggle<K extends UsesToggle['__kind']>(kind: K, value: UsesToggle): value is UsesToggle & {
    __kind: K;
};
//# sourceMappingURL=usesToggle.d.ts.map