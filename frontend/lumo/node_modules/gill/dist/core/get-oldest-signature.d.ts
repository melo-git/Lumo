import type { Simplify } from "../types/index";
import type { Address, GetSignaturesForAddressApi, Rpc } from "@solana/kit";
type GetOldestSignatureForAddressRpc<TCluster> = Rpc<GetSignaturesForAddressApi> & {
    "~cluster"?: TCluster;
};
type GetOldestSignatureForAddressConfig = Simplify<Parameters<GetSignaturesForAddressApi["getSignaturesForAddress"]>[1]> & {
    abortSignal?: AbortSignal;
};
/**
 * Get the oldest signature for the provided `address`
 */
export declare function getOldestSignatureForAddress<TCluster>(rpc: GetOldestSignatureForAddressRpc<TCluster>, address: Address, config?: GetOldestSignatureForAddressConfig): Promise<ReturnType<GetSignaturesForAddressApi["getSignaturesForAddress"]>[0]>;
export {};
//# sourceMappingURL=get-oldest-signature.d.ts.map