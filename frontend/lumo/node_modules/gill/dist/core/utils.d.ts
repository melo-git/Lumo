import { type Address, type TransactionSigner } from "@solana/kit";
import type { SolanaClusterMoniker } from "../types";
/**
 * Determine the Solana moniker from its genesis hash
 *
 * If the hash is NOT known, returns `unknown`
 */
export declare function getMonikerFromGenesisHash(hash: string): SolanaClusterMoniker | "unknown";
export declare function checkedAddress<TAddress extends string = string>(input: Address<TAddress> | TransactionSigner<TAddress>): Address<TAddress>;
export declare function checkedTransactionSigner<TAddress extends string = string>(input: Address<TAddress> | TransactionSigner<TAddress>): TransactionSigner<TAddress>;
/**
 * Convert a lamport number to the human readable string of a SOL value
 */
export declare function lamportsToSol(lamports: bigint | number): string;
//# sourceMappingURL=utils.d.ts.map