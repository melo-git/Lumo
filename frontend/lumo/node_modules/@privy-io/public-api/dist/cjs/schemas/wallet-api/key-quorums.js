"use strict";var r=require("zod");const i=r.z.object({key_quorum_id:r.z.string({required_error:"Key quorum ID must be provided",invalid_type_error:"Key quorum ID is not a valid string"}).cuid2()}),e=r.z.object({public_keys:r.z.array(r.z.string()).min(1).optional(),authorization_threshold:r.z.number().min(1).optional(),display_name:r.z.string().max(50).optional(),user_ids:r.z.array(r.z.string()).min(1).optional()}).strict().refine((({user_ids:r,public_keys:i})=>void 0!==r||void 0!==i),"Must provide at least one of user_ids or public_keys"),o=r.z.object({id:r.z.string(),display_name:r.z.string().nullable(),authorization_threshold:r.z.number().nullable(),authorization_keys:r.z.array(r.z.object({public_key:r.z.string(),display_name:r.z.string().nullable()})),user_ids:r.z.array(r.z.string()).nullable()}),t=r.z.object({public_keys:r.z.array(r.z.string()).optional(),authorization_threshold:r.z.number().optional(),display_name:r.z.string().max(50).optional(),user_ids:r.z.array(r.z.string()).optional()}).strict().refine((({public_keys:r,authorization_threshold:i,display_name:e,user_ids:o})=>void 0!==r||void 0!==i||void 0!==e||void 0!==o),"Must provide at least one of public_keys, authorization_threshold, display_name, or user_ids");exports.CreateKeyQuorumInput=e,exports.KeyQuorumIdFromPath=i,exports.KeyQuorumResponse=o,exports.UpdateKeyQuorumInput=t;
